/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Projects */
        get: operations["api_projects_controller_list_projects"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/{projectID}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Document Project */
        post: operations["api_projects_controller_document_project"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/services": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Service */
        post: operations["api_services_controller_create_service"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** DeploymentRes */
        DeploymentRes: {
            /** Id */
            id: string;
            /** Status */
            status: string;
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /**
             * Statusupdatedat
             * Format: date-time
             */
            statusUpdatedAt: string;
            /** Canredeploy */
            canRedeploy: boolean;
        };
        /** ProjectRes */
        ProjectRes: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Description */
            description: string | null;
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /** Deletedat */
            deletedAt: string | null;
            /** Services */
            services: components["schemas"]["ServiceRes"][];
        };
        /** ServiceRes */
        ServiceRes: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /**
             * Createdat
             * Format: date-time
             */
            createdAt: string;
            /** Deletedat */
            deletedAt: string | null;
            /** Deployments */
            deployments: components["schemas"]["DeploymentRes"][];
        };
        /** ProjectOverviewReadmeRes */
        ProjectOverviewReadmeRes: {
            /** Id */
            id: string;
            /** Created At */
            created_at: string;
            /** Project Id */
            project_id: string;
            /** Content */
            content: string;
            /** Prompt */
            prompt: string;
        };
        /** ServiceCreateReq */
        ServiceCreateReq: {
            /** Projectid */
            projectID: string;
            /** Name */
            name: string;
            /** Image */
            image: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    api_projects_controller_list_projects: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectRes"][];
                };
            };
        };
    };
    api_projects_controller_document_project: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                projectID: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProjectOverviewReadmeRes"];
                };
            };
        };
    };
    api_services_controller_create_service: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ServiceCreateReq"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
